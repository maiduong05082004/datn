// import React, { useState } from 'react';
// import { CKEditor } from '@ckeditor/ckeditor5-react';
// import ClassicEditor from '@ckeditor/ckeditor5-build-classic';
// import { ToastContainer } from 'react-toastify';
// import 'react-toastify/dist/ReactToastify.css';
// import { useQuery } from '@tanstack/react-query';
// import axios from 'axios';

// type Variant = {
//   size: string;
//   stock: string;
//   discount: string;
//   sku: string;
// };

// type VariantForm = {
//   variantGroup: string;
//   selectedColor: string;
//   variants: Variant[];
//   variantImages: { [key: string]: string | null };
//   variantAlbums: { [key: string]: string[] };
// };

// type AttributeValue = {
//   id: number;
//   value: string;
// };

// type Attribute = {
//   id: number;
//   name: string;
//   attribute_type: number;
//   attribute_values: AttributeValue[];
// };

// type AttributeGroup = {
//   group_id: number;
//   group_name: string;
//   attributes: Attribute[];
// };

// const AddProduct = () => {
//   const [productDescription, setProductDescription] = useState('');
//   const [mainImage, setMainImage] = useState<string | null>(null);
//   const [variantForms, setVariantForms] = useState<VariantForm[]>([]);
//   const [variantAlbums, setVariantAlbums] = useState<{ [key: string]: string[] }>({});
//   const [colors, setColors] = useState<string[]>([]);
//   const [sizes, setSizes] = useState<string[]>([]);

//   const { data: categories } = useQuery({
//     queryKey: ['categories'],
//     queryFn: async () => {
//       const response = await axios.get('http://localhost:8000/api/admins/categories');
//       return response.data; // Ensure it returns an array
//     },
//   });

//   const { data: attributeGroups, isLoading } = useQuery<AttributeGroup[]>({
//     queryKey: ['attributeGroups'],
//     queryFn: async () => {
//       const response = await axios.get('http://localhost:8000/api/admins/attribute_groups');
//       return Object.values(response.data.data);
//     },
//   });
//   const Colors = attributeGroups?.flatMap(group => 
//     group.attributes.flatMap(attr => 
//       attr.attribute_values
//     )
//   );
//   console.log(Colors);
  
  
  
//   const handleVariantGroupChange = (index: number, value: string) => {
//     const updatedForms = [...variantForms];
//     updatedForms[index].variantGroup = value;
//     setVariantForms(updatedForms);

//     const group = attributeGroups?.find((group) => group.group_name === value);
//     if (group) {
//       const colorAttribute = group.attributes.find(attr => attr.name.toLowerCase() === 'color');
//       const sizeAttribute = group.attributes.find(attr => attr.name.toLowerCase() === 'size');
//       setColors(colorAttribute ? colorAttribute.attribute_values.map(attr => attr.value) : []);
//       setSizes(sizeAttribute ? sizeAttribute.attribute_values.map(attr => attr.value) : []);

//       // Reset variants when changing group
//       updatedForms[index].variants = [{ size: '', stock: '', discount: '', sku: '' }];
//     }
//   };

//   const handleAddVariantForm = () => {
//     setVariantForms((prev) => [
//       ...prev,
//       {
//         variantGroup: '',
//         selectedColor: '',
//         variants: [{ size: '', stock: '', discount: '', sku: '' }],
//         variantImages: {},
//         variantAlbums: {},
//       },
//     ]);
//   };

//   const handleColorChange = (index: number, color: string) => {
//     setVariantForms((prevForms) => {
//       const updatedForms = [...prevForms];
//       updatedForms[index].selectedColor = color;
//       // Ensure the selected color is visually represented
//       updatedForms.forEach((form, idx) => {
//         if (idx === index) {
//           form.selectedColor = color; // Set the selected color
//         }
//       });
//       return updatedForms;
//     });
//   };

//   const handleVariantChange = (formIndex: number, variantIndex: number, field: keyof Variant, value: string) => {
//     setVariantForms((prevForms) => {
//       const updatedForms = [...prevForms];
//       const updatedVariants = [...updatedForms[formIndex].variants];
//       updatedVariants[variantIndex] = {
//         ...updatedVariants[variantIndex],
//         [field]: value,
//       };
//       updatedForms[formIndex].variants = updatedVariants;
//       return updatedForms;
//     });
//   };

//   const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {
//     if (e.target.files && e.target.files[0]) {
//       const file = e.target.files[0];
//       const reader = new FileReader();
//       reader.onload = () => {
//         setMainImage(reader.result as string);
//       };
//       reader.readAsDataURL(file);
//     }
//   };

//   const handleVariantImageChange = (color: string, e: React.ChangeEvent<HTMLInputElement>) => {
//     if (e.target.files && e.target.files[0]) {
//       const file = e.target.files[0];
//       const reader = new FileReader();
//       reader.onload = () => {
//         setVariantForms((prevForms) => {
//           const updatedForms = [...prevForms];
//           updatedForms.forEach(form => {
//             if (form.selectedColor === color) {
//               form.variantImages[color] = reader.result as string;
//             }
//           });
//           return updatedForms;
//         });
//       };
//       reader.readAsDataURL(file);
//     }
//   };

//   const handleVariantAlbumChange = (color: string, e: React.ChangeEvent<HTMLInputElement>) => {
//     if (e.target.files) {
//       const files = Array.from(e.target.files);
//       const readers = files.map((file) => {
//         return new Promise<string>((resolve) => {
//           const reader = new FileReader();
//           reader.onload = () => resolve(reader.result as string);
//           reader.readAsDataURL(file);
//         });
//       });

//       Promise.all(readers).then((results) => {
//         setVariantAlbums((prev) => ({ ...prev, [color]: results }));
//       });
//     }
//   };

//   const handleRemoveVariantForm = (index: number) => {
//     setVariantForms((prevForms) => {
//       const updatedForms = prevForms.filter((_, idx) => idx !== index);
//       return updatedForms;
//     });
//   };

//   if (isLoading) {
//     return <div>Loading...</div>;
//   }

//   return (
//     <>
//       <ToastContainer position="top-right" autoClose={5000} hideProgressBar={false} closeOnClick draggable pauseOnHover />
//       <div className='border-2 border-gray-300 w-[95%] m-auto rounded-2xl mt-10 mb-10 shadow-lg'>
//         <div className='w-[90%] m-auto mt-10'>
//           <h2 className='text-4xl font-sans text-center font-bold mb-10 text-gray-800'>Thêm Sản Phẩm</h2>

//           <form>
//             <div className="container mx-auto p-6 min-w-full bg-white">
//               <div className="grid grid-cols-2 gap-6">
//                 <div className="space-y-4">
//                   <div className="flex flex-col">
//                     <label htmlFor="productName" className="font-medium text-gray-700">Tên Sản phẩm</label>
//                     <input
//                       type="text"
//                       id="productName"
//                       className="border rounded-lg p-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
//                       placeholder="Nhập tên sản phẩm"
//                     />
//                   </div>

//                   <div className="flex flex-col">
//                     <label htmlFor="productPrice" className="font-medium text-gray-700">Giá Sản phẩm</label>
//                     <input
//                       type="text"
//                       id="productPrice"
//                       className="border rounded-lg p-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
//                       placeholder="Nhập giá sản phẩm"
//                     />
//                   </div>

//                   <div className="flex flex-col">
//                     <label htmlFor="productStock" className="font-medium text-gray-700">Tồn kho</label>
//                     <input
//                       type="number"
//                       id="productStock"
//                       className="border rounded-lg p-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
//                       placeholder="Nhập số lượng tồn kho"
//                     />
//                   </div>

//                   <div className="flex flex-col">
//                     <label htmlFor="category" className="font-medium text-gray-700">Danh mục</label>
//                     <select
//                       id="category"
//                       className="border rounded-lg p-2"
//                     >
//                       <option value="">--Chọn danh mục--</option>
//                       {categories?.map((category: any) => (
//                         <optgroup key={category.id} label={category.name}>
//                           {category.children_recursive?.map((child: any) => (
//                             <option key={child.id} value={child.id}>
//                               {child.name}
//                             </option>
//                           ))}
//                         </optgroup>
//                       ))}
//                     </select>
//                   </div>

//                   <div className="flex flex-col">
//                     <label htmlFor="dateAdded" className="font-medium text-gray-700">Ngày nhập</label>
//                     <input
//                       type="date"
//                       id="dateAdded"
//                       className="border rounded-lg p-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
//                     />
//                   </div>

//                   <div className="flex flex-col">
//                     <label htmlFor="shortDescription" className="font-medium text-gray-700">Mô tả ngắn</label>
//                     <textarea
//                       id="shortDescription"
//                       className="border rounded-lg p-2 h-[100px] focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
//                       placeholder="Nhập mô tả ngắn"
//                     />
//                   </div>

//                   <div className='flex justify-between'>
//                     <div className="flex flex-col w-[48%]">
//                       <label htmlFor="mainImage" className="font-medium text-gray-700">Ảnh đại diện</label>
//                       <input
//                         type="file"
//                         id="mainImage"
//                         className="border rounded-lg p-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
//                         onChange={handleImageChange}
//                       />
//                       {mainImage && (
//                         <div className="mt-4">
//                           <img src={mainImage} alt="Ảnh đại diện" className="w-full h-48 object-cover rounded-lg shadow-md" />
//                           <button
//                             type="button"
//                             className="mt-2 p-2 bg-red-500 text-white rounded-lg hover:bg-red-600"
//                             onClick={() => setMainImage(null)}
//                           >
//                             Xóa
//                           </button>
//                         </div>
//                       )}
//                     </div>

//                     <div className="flex flex-col w-[48%]">
//                       <label className="font-medium text-gray-700">Album hình ảnh</label>
//                       <input
//                         type="file"
//                         multiple
//                         onChange={(e) => handleVariantAlbumChange('default', e)}
//                         className="border rounded-lg p-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
//                       />
//                       {variantAlbums['default'] && variantAlbums['default'].map((image, idx) => (
//                         <div key={idx} className="mt-4">
//                           <img src={image} alt={`Hình ảnh album`} className="w-full h-48 object-cover rounded-lg shadow-md" />
//                           <button
//                             type="button"
//                             className="mt-2 p-2 bg-red-500 text-white rounded-lg hover:bg-red-600"
//                             onClick={() => setVariantAlbums((prev) => {
//                               const updatedAlbum = prev['default'].filter((_, index) => index !== idx);
//                               return { ...prev, default: updatedAlbum };
//                             })}
//                           >
//                             Xóa
//                           </button>
//                         </div>
//                       ))}
//                     </div>
//                   </div>
//                 </div>

//                 <div className="space-y-4">
//                   <div className="flex flex-col">
//                     <label className="font-medium mb-2 text-base text-gray-800">Mô tả chi tiết sản phẩm</label>
//                     <CKEditor
//                       editor={ClassicEditor}
//                       data={productDescription}
//                       onChange={(_, editor) => setProductDescription(editor.getData())}
//                     />
//                   </div>

//                   <button
//                     type="button"
//                     className="mb-4 py-2 px-4 bg-blue-500 text-white rounded-lg hover:bg-blue-600"
//                     onClick={handleAddVariantForm}
//                   >
//                     Thêm biến thể mới
//                   </button>
//                   {variantForms.map((form, formIndex) => (
//                     <div key={formIndex} className="bg-white shadow-lg rounded-lg overflow-hidden mb-6">
//                       <div className="bg-green-100 p-4 rounded-t-lg flex justify-between items-center">
//                         <h4 className="text-lg font-semibold text-green-800">
//                           Biến thể sản phẩm {formIndex + 1}
//                         </h4>
//                         <button
//                           type="button"
//                           className="text-red-500 hover:text-red-700"
//                           onClick={() => handleRemoveVariantForm(formIndex)}
//                         >
//                           Xóa biến thể
//                         </button>
//                       </div>

//                       <div className="p-6 bg-gray-50">
//                         <div className="mb-4">
//                           <label htmlFor={`variant_group_${formIndex}`} className="block font-medium text-gray-700">
//                             Chọn nhóm biến thể
//                           </label>
//                           <select
//                             id={`variant_group_${formIndex}`}
//                             className="mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2"
//                             value={form.variantGroup}
//                             onChange={(e) => handleVariantGroupChange(formIndex, e.target.value)}
//                           >
//                             <option value="">Chọn nhóm biến thể</option>
//                             {attributeGroups?.map((group: any) => (
//                               <option key={group.group_id} value={group.group_name}>
//                                 {group.group_name}
//                               </option>
//                             ))}
//                           </select>
//                         </div>

//                         {form.variantGroup && (
//                           <>
//                             <div className="mb-4">
//                               <label className="block font-medium text-gray-700">Chọn màu sắc</label>
//                               <div className="grid grid-cols-3 gap-4 mt-2">
//                                 {colors.length > 0 ? (
//                                   colors.map((color, index) => (
//                                     <div
//                                       key={index}
//                                       className="flex items-center justify-center cursor-pointer"
//                                       onClick={() => handleColorChange(formIndex, color)}
//                                     >
//                                       <div className="w-10 h-10 rounded-full border border-[#e6e6e6] hover:border-black flex justify-center items-center">
//                                         <div className="w-8 h-8 rounded-full" style={{ backgroundColor: color.toLowerCase() }} />
//                                       </div>
//                                     </div>
//                                   ))
//                                 ) : (
//                                   <div className="col-span-3 text-center text-gray-500">Không có màu sắc</div>
//                                 )}
//                               </div>
//                             </div>

//                             <div className="mb-4">
//                               <label className="block font-medium text-gray-700">Chọn kích thước</label>
//                               <div className="grid grid-cols-3 gap-4 mt-2">
//                                 {sizes.length > 0 ? (
//                                   sizes.map((size, index) => (
//                                     <div
//                                       key={index}
//                                       className="flex items-center justify-center cursor-pointer"
//                                       onClick={() => handleVariantChange(formIndex, 0, 'size', size)}
//                                     >
//                                       <span className="w-10 h-10 flex items-center justify-center border border-[#e6e6e6] hover:border-black">
//                                         {size}
//                                       </span>
//                                     </div>
//                                   ))
//                                 ) : (
//                                   <div className="col-span-3 text-center text-gray-500">Không có kích thước</div>
//                                 )}
//                               </div>
//                             </div>

//                             {form.variants.map((variant, variantIndex) => (
//                               <div key={variantIndex} className="mb-4 grid grid-cols-4 gap-4 items-center">
//                                 <input
//                                   type="number"
//                                   placeholder="Số lượng"
//                                   className="border border-gray-300 rounded-md shadow-sm p-2"
//                                   value={variant.stock}
//                                   onChange={(e) => handleVariantChange(formIndex, variantIndex, 'stock', e.target.value)}
//                                 />
//                                 <input
//                                   type="number"
//                                   placeholder="Giảm giá (%)"
//                                   className="border border-gray-300 rounded-md shadow-sm p-2"
//                                   value={variant.discount}
//                                   onChange={(e) => handleVariantChange(formIndex, variantIndex, 'discount', e.target.value)}
//                                 />
//                               </div>
//                             ))}

//                             <div className="mb-4">
//                               <div className="flex justify-between gap-2">
//                                 <div className="mb-4">
//                                   <label className="block font-medium text-gray-700">Hình ảnh đại diện cho {form.selectedColor}</label>
//                                   <input
//                                     type="file"
//                                     onChange={(e) => handleVariantImageChange(form.selectedColor, e)}
//                                     className="mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2"
//                                   />
//                                   {form.variantImages[form.selectedColor] && (
//                                     <div className="mt-4">
//                                       <img
//                                         src={form.variantImages[form.selectedColor]!}
//                                         alt={`Hình ảnh đại diện cho ${form.selectedColor}`}
//                                         className="w-[280px] h-48 object-cover rounded-lg shadow-md m-auto"
//                                       />
//                                       <button
//                                         type="button"
//                                         className="mt-2 p-2 bg-red-500 text-white rounded-lg hover:bg-red-600"
//                                         onClick={() => setVariantForms((prevForms) => {
//                                           const updatedForms = [...prevForms];
//                                           updatedForms[formIndex].variantImages[form.selectedColor] = null;
//                                           return updatedForms;
//                                         })}
//                                       >
//                                         Xóa
//                                       </button>
//                                     </div>
//                                   )}
//                                 </div>

//                                 <div className="mb-4">
//                                   <label className="block font-medium text-gray-700">Album hình ảnh cho {form.selectedColor}</label>
//                                   <input
//                                     type="file"
//                                     multiple
//                                     onChange={(e) => handleVariantAlbumChange(form.selectedColor, e)}
//                                     className="mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2"
//                                   />
//                                   {form.variantAlbums[form.selectedColor] && form.variantAlbums[form.selectedColor].map((image, idx) => (
//                                     <div key={idx} className="mt-4">
//                                       <img src={image} alt={`Hình ảnh album cho ${form.selectedColor}`} className="w-[280px] h-48 object-cover rounded-lg shadow-md" />
//                                       <button
//                                         type="button"
//                                         className="mt-2 p-2 bg-red-500 text-white rounded-lg hover:bg-red-600"
//                                         onClick={() => setVariantAlbums((prev) => {
//                                           const updatedAlbum = prev[form.selectedColor].filter((_, index) => index !== idx);
//                                           return { ...prev, [form.selectedColor]: updatedAlbum };
//                                         })}
//                                       >
//                                         Xóa
//                                       </button>
//                                     </div>
//                                   ))}
//                                 </div>
//                               </div>
//                             </div>
//                           </>
//                         )}
//                       </div>
//                     </div>
//                   ))}
//                 </div>
//               </div>

//               <div className="mt-6 flex justify-center">
//                 <button
//                   type="submit"
//                   className="py-2 px-4 bg-blue-500 text-white rounded-lg hover:bg-blue-600"
//                 >
//                   Submit
//                 </button>
//               </div>
//             </div>
//           </form>
//         </div>
//       </div>
//     </>
//   );
// };

// export default AddProduct;